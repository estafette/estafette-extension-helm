builder:
  track: dev

labels:
  app-group: estafette-ci-extensions
  team: estafette-team
  language: golang

version:
  semver:
    major: 0
    minor: 1

stages:
  build:
    image: golang:1.13.4-alpine3.10
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOGC: off
    commands:
    - go test ./...
    - go build -a -installsuffix cgo -ldflags "-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}" -o ./publish/${ESTAFETTE_GIT_NAME} .

  bake:
    image: extensions/docker:dev
    action: build
    container: helm
    dontExpand:
    - PATH
    inline: |
      FROM alpine/helm:2.16.0

      LABEL maintainer="estafette.io" \
            description="The ${ESTAFETTE_GIT_NAME} component is an Estafette extension to with linting, packaging, testing and adding Helm charts to repositories"

      ENV VERSION="${ESTAFETTE_BUILD_VERSION}" \
          HELM_DIFF_VERSION=v2.11.0+5 \
          HELM_TILLER_VERSION=v0.8.1 \
          HELM_HOST="127.0.0.1:44134"

      RUN apk add --update --no-cache \
            git \
            bash \
          && rm -rf /var/cache/apk/* \
          && wget -O /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.15.1/bin/linux/amd64/kubectl \
          && chmod +x /usr/local/bin/kubectl \
          && mkdir -p ~/.kube ~/.helm/plugins \
          && helm plugin install https://github.com/databus23/helm-diff --version ${HELM_DIFF_VERSION} \
          && helm plugin install https://github.com/rimusz/helm-tiller --version ${HELM_TILLER_VERSION}

      # install gcloud sdk, see https://github.com/GoogleCloudPlatform/cloud-sdk-docker/blob/master/alpine/Dockerfile
      ENV PATH="/google-cloud-sdk/bin:$PATH" \
          CLOUD_SDK_VERSION="270.0.0"

      RUN apk --no-cache add \
              python \
              py-crcmod \
              bash \
              libc6-compat \
              openssh-client \
              git \
              gnupg \
          && wget -O google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \
          && tar xzf google-cloud-sdk.tar.gz -C / \
          && rm google-cloud-sdk.tar.gz \
          && gcloud config set core/disable_usage_reporting true \
          && gcloud config set component_manager/disable_update_check true \
          && gcloud config set metrics/environment github_docker_image \
          && gcloud --version

      COPY ${ESTAFETTE_GIT_NAME} /

      WORKDIR /estafette-work

      ENTRYPOINT ["/${ESTAFETTE_GIT_NAME}"]
    repositories:
    - extensions
    path: ./publish

  push-to-docker-hub:
    image: extensions/docker:dev
    action: push
    container: helm
    repositories:
    - extensions

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  dev:
    triggers:
    - pipeline:
        name: self
        branch: .+
    stages:
      tag-container-image:
        image: extensions/docker:dev
        action: tag
        container: helm
        repositories:
        - extensions
        tags:
        - dev

  beta:
    stages:
      tag-container-image:
        image: extensions/docker:dev
        action: tag
        container: helm
        repositories:
        - extensions
        tags:
        - beta

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#build-status'
        when:
          status == 'succeeded' ||
          status == 'failed'

  stable:
    stages:
      tag-container-image:
        image: extensions/docker:dev
        action: tag
        container: helm
        repositories:
        - extensions
        tags:
        - stable
        - latest

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#build-status'
        when:
          status == 'succeeded' ||
          status == 'failed'